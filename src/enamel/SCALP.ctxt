#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=dir\ name
comment1.target=boolean\ accept(java.io.File,\ java.lang.String)
comment10.params=arg0
comment10.target=void\ handleGpioPinDigitalStateChangeEvent(com.pi4j.io.gpio.event.GpioPinDigitalStateChangeEvent)
comment11.params=
comment11.target=void\ speakState()
comment11.text=\n\ This\ method\ is\ responsible\ for\ speaking\ to\ the\ user\ the\ current\ state\ of\ the\ program\:\n\ where\ they\ are\ in\ the\ program\ (which\ selector\ they\ are\ in)\ and\ what\ options\ they\ have\ (what\ each\n\ button\ does).\ A\ String\ <code>state</code>\ field\ is\ responsible\ for\ determining\ what\n\ state\ the\ program\ is\ in,\ and\ is\ changed\ in\ the\ button\ action\ methods.\n\ Depending\ on\ the\ state\ of\ <code>speakInstructions</code>,\ this\ method\ will\ either\ speak\ the\ \n\ instructions\ or\ simply\ return\ without\ doing\ anything.\ As\ <code>index</code>\ is\ reset\ to\ 0\ when\n\ instructions\ are\ spoken,\ and\ only\ when\ the\ user\ enters\ another\ state\ will\ <code>speakInstructions</code>\n\ be\ set\ to\ true,\ this\ allows\ for\ the\ index\ to\ be\ reset\ at\ the\ correct\ time.\n
comment12.params=
comment12.target=void\ buttonOne()
comment12.text=\n\ This\ method\ handles\ the\ logic\ for\ the\ third\ button.\ \n\ For\ the\ states,\ the\ behaviour\ is\ as\ follows\:\n\ highLevelSelector\ -\ Selects\ the\ USB\ Buffer\ directory\ by\ setting\ currentDirectory\ and\ currentDirectoryFiles\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ USBBufferDirectory\ and\ USBBufferDirectoryFiles.\ Changes\ state\ to\ fileSelector.\ \n\ fileSelector\ -\ Loops\ through\ currentDirectoryFiles\ list.\ If\ at\ the\ end\ of\ the\ list,\ start\ again\ from\ the\ beginning.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Speaks\ the\ current\ file\ as\ well.\n\ settingsSelector\ -\ Loops\ through\ settings\ parameters,\ with\ the\ circular\ loop,\ and\ speaks\ the\ current\ settings\ parameter.\n\ configSelector\ -\ Loops\ through\ configuration\ parameters\ ("true"/"false"\ or\ "5",\ "10",\ "15",\ "20"\ depending\ on\ which\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ settings\ parameter\ is\ selected),\ again\ looping\ and\ speaking\ out\ loud\ the\ current\ configuration\ parameter.\n\ confirmStartPlayer\ -\ Starts\ the\ current\ file\ (only\ used\ for\ the\ START_USB_WITH_FILE_1\ mode).\ This\ is\ needed\ so\ that\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ user\ still\ has\ a\ chance\ to\ enter\ settings\ even\ with\ the\ START_USB_WITH_FILE_1\ selected;\ allows\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ user\ to\ confirm\ before\ starting\ the\ file.\ \n
comment13.params=
comment13.target=void\ buttonTwo()
comment13.text=\n\ This\ method\ handles\ the\ logic\ for\ the\ third\ button.\ \n\ For\ the\ states,\ the\ behaviour\ is\ as\ follows\:\n\ highLevelSelector\ -\ Selects\ the\ factory\ directory\ by\ setting\ currentDirectory\ and\ currentDirectoryFiles\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ factoryDirectory\ and\ factoryDirectoryFiles.\ Changes\ state\ to\ fileSelector.\n\ fileSelector\ -\ Starts\ the\ currently\ selected\ file\ from\ currentDirectoryFiles;\ selection\ takes\ place\ using\ button\ 1.\n\ settingsSelector\ -\ Selects\ the\ currently\ selected\ settings\ parameter\ by\ setting\ <code>config</code>\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ the\ current\ sConfigParameters[index].\ Changes\ state\ to\ configSelector.\n\ configSelector\ -\ Creates\ a\ new\ ProcessBuilder\ that\ starts\ the\ shell\ script\ "changeconfig.sh",\ which\ will\ change\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "config.txt".\ Note,\ currently\ it\ is\ a\ hard-coded\ directory,\ and\ since\ it\ is\ a\ shell\ script,\ this\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ will\ not\ work\ with\ Windows\ systems.\ Meant\ to\ be\ used\ only\ on\ a\ properly\ set\ up\ Rasberry\ Pi.\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Speaks\ the\ change,\ and\ sets\ the\ state\ to\ settingsSelector.\n\ confirmStartPlayer\ -\ Not\ present;\ button\ 2\ does\ not\ have\ any\ effect\ in\ the\ state\ confirmStartPlayer.\n
comment14.params=
comment14.target=void\ buttonThree()
comment14.text=\n\ This\ method\ handles\ the\ logic\ for\ the\ third\ button.\ \n\ For\ the\ states,\ the\ behaviour\ is\ as\ follows\:\n\ highLevelSelector\ -\ Sets\ the\ state\ to\ settingsSelector,\ while\ setting\ previous\ to\ highLevelSelector.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ This\ allows\ the\ user\ to\ return\ to\ the\ previous\ menu\ through\ the\ <code>previous</code>\ field.\n\ fileSelector\ -\ Same\ behaviour\ as\ highLevelSelector,\ but\ sets\ previous\ to\ fileSelector\ instead.\n\ settingsSelector\ -\ Sets\ the\ state\ to\ previous,\ to\ allow\ the\ program\ to\ reenter\ the\ previous\ state.\n\ configSelector\ -\ Sets\ the\ state\ ot\ settingsSelector;\ effectively,\ "exiting"\ the\ configuration\ selector\ state\ without\ saving.\n\ confirmStartPlayer\ -\ Same\ behaviour\ as\ fileSelector\ and\ highLevelSelector,\ but\ sets\ previous\ to\ confirmStartPlayer.\n
comment15.params=path
comment15.target=void\ startPlayer(java.lang.String)
comment15.text=\n\ This\ method\ clears\ any\ SCALP-related\ components\ (JFrame,\ hardware\ button\ ISRs)\n\ before\ creating\ an\ instance\ of\ ScenarioParser\ and\ starting\ the\ player.\n\ Starting\ the\ player\ is\ done\ in\ a\ new\ thread.\n\ \n\ @param\ path\n\ \ \ \ \ \ \ \ \ \ the\ absolute\ path\ of\ the\ scenario\ file\ to\ start\ the\ ScenarioParser\ with\ \n
comment16.params=
comment16.target=void\ run()
comment17.params=
comment17.target=void\ removeHWButtons()
comment17.text=\n\ This\ method\ removes\ the\ hardware\ buttons'\ listeners.\ \n\ Loops\ through\ and\ removes\ all\ the\ listeners\ from\ the\ buttons\ in\ \n\ <code>buttonList</code>.\n
comment18.params=message
comment18.target=void\ speak(java.lang.String)
comment18.text=\n\ A\ method\ for\ speaking\ out\ loud\ the\ String\ passed\ as\ argument,\n\ using\ FreeTTS.\n\ \n\ @param\ message\n\ \ \ \ \ \ \ \ \ \ the\ message\ to\ be\ spoken\ out\ loud\ to\ the\ user\n
comment2.params=
comment2.target=void\ keySelector()
comment2.text=\n\ This\ method\ adds\ a\ KeyListener\ to\ the\ dummy\ frame,\ and\n\ this\ KeyListener\ responds\ to\ the\ number\ row's\ "1",\ "2",\ and\ "3"\ keys.\n\ The\ functions\ of\ the\ keyPressed\ event\ have\ been\ delegated\ to\ <code>buttonOne()</code>,\n\ <code>buttonTwo()</code>,\ and\ <code>buttonThree()</code>\ methods,\ as\ well\ as\ <code>speakState()</code>.\n\ This\ was\ done\ so\ that\ the\ code\ for\ what\ happens\ when\ a\ particular\ button\ is\ pressed\ at\ a\ particular\ time\n\ can\ be\ reused\ for\ any\ type\ of\ input,\ whether\ it\ be\ a\ KeyListener,\ a\ JButton\ ActionListener,\ or\n\ the\ GPIO\ hardware\ buttons.\n
comment3.params=
comment3.target=void\ run()
comment4.params=e
comment4.target=void\ keyPressed(java.awt.event.KeyEvent)
comment5.params=e
comment5.target=void\ keyReleased(java.awt.event.KeyEvent)
comment6.params=e
comment6.target=void\ keyTyped(java.awt.event.KeyEvent)
comment7.params=
comment7.target=void\ hardwareSelector()
comment7.text=\n\ This\ method\ creates\ an\ ISR,\ which\ listens\ for\ interrupts\ on\ the\ specified\ GPIO\ pin.\n\ The\ functions\ of\ the\ callback\ event\ have\ been\ delegated\ to\ <code>buttonOne()</code>,\n\ <code>buttonTwo()</code>,\ and\ <code>buttonThree()</code>\ methods,\ as\ well\ as\ <code>speakState()</code>.\n\ This\ was\ done\ so\ that\ the\ code\ for\ what\ happens\ when\ a\ particular\ button\ is\ pressed\ at\ a\ particular\ time\n\ can\ be\ reused\ for\ any\ type\ of\ input,\ whether\ it\ be\ a\ KeyListener,\ a\ JButton\ ActionListener,\ or\n\ the\ GPIO\ hardware\ buttons.\n\ <p>\n\ A\ <code>debounce</code>\ field\ prevents\ the\ button\ from\ being\ pressed\ in\ rapid\ succession,\ ensuring\n\ that\ only\ after\ a\ full\ second\ will\ a\ secondary\ press\ be\ registered.\n
comment8.params=arg0
comment8.target=void\ handleGpioPinDigitalStateChangeEvent(com.pi4j.io.gpio.event.GpioPinDigitalStateChangeEvent)
comment9.params=arg0
comment9.target=void\ handleGpioPinDigitalStateChangeEvent(com.pi4j.io.gpio.event.GpioPinDigitalStateChangeEvent)
numComments=19
